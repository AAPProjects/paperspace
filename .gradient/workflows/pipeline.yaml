defaults:
  env:
    API_KEY: secret:abir-apiKey-01
    batches: "10"
'on':
  github:
    branches:
      only: main
jobs:
  
  CloneRepo:
    uses: git-checkout@v1
    with:
      url: https://github.com/AbirRahaliR/ResNet-PyTorch.git
      # username: AbirRahaliR
      # password: secret:abir_github_token
    outputs:
      repo:
        type: volume
    resources:
      instance-type: C4
  TrainResNet18:
    uses: script@v1
    with:
      image: nvcr.io/nvidia/pytorch:21.10-py3
      script: |-
        cd /inputs/repo/
        pip install wandb -qqq
        python train_model_wandb.py --layers=18 --epochs="$batches"
        # cp -R /inputs/repo /outputs
        # cp -R model/resnet18-epochs-"$batches".pth /outputs/model
    needs:
      - CloneRepo
    inputs:
      repo: CloneRepo.outputs.repo
      cifar10-data: 
        type: dataset
        with:
          ref: ds4xkzxoranlih1
    outputs:
      model:
        type: dataset
        with:
          ref: ds4xkzxoranlih1
      repo:
        type: volume
    resources:
      instance-type: C4
  # UploadResNet18:
  #   needs:
  #     - TrainResNet18
  #   uses: create-model@v1
  #   with:
  #     name: resnet18-epochs-10
  #     type: Custom
  #   inputs:
  #     model:
  #       type: dataset
  #       with:
  #         ref: ds4xkzxoranlih1
  #   outputs:
  #     model-id:
  #       type: string
  #   resources:
  #     instance-type: C4
  # TestResNet18:
  #   uses: script@v1
  #   with:
  #     image: nvcr.io/nvidia/pytorch:21.10-py3
  #     script: |-
  #       cd /inputs/repo/
  #       python test_model.py -m /inputs/model/resnet18-epochs-"$batches".pth --id=$(cat /inputs/model-id)
  #       cp -R /inputs/repo /outputs
  #       cp -R test-results/resnet18-epochs-"$batches".json /outputs/test-results
  #   needs:
  #     - TrainResNet18
  #     - UploadResNet18
  #   inputs:
  #     repo: TrainResNet18.outputs.repo
  #     model: TrainResNet18.outputs.model
  #     model-id: UploadResNet18.outputs.model-id
  #     cifar10-data: 
  #       type: dataset
  #       with:
  #         ref: ds4xkzxoranlih1
  #   outputs:
  #     test-results:
  #       type: volume
  #     repo:
  #       type: volume
  #   resources:
  #     instance-type: C4
  # TrainResNet34:
  #   uses: script@v1
  #   with:
  #     image: nvcr.io/nvidia/pytorch:21.10-py3
  #     script: |-
  #       cd /inputs/repo/
  #       pip install wandb -q
  #       python train_model_wandb.py --layers=34 --epochs="$batches"
  #       cp -R /inputs/repo /outputs
  #       cp -R model/resnet34-epochs-"$batches".pth /outputs/model
  #   # needs:
  #   #   - CloneRepo
  #   inputs:
  #     # repo: CloneRepo.outputs.repo
  #     cifar10-data: 
  #       type: dataset
  #       with:
  #         ref: ds4xkzxoranlih1
  #   outputs:
  #     model:
  #       type: dataset
  #       with:
  #         ref: ds4xkzxoranlih1
  #     repo:
  #       type: volume
  #   resources:
  #     instance-type: C4
  # UploadResNet34:
  #   needs:
  #     - TrainResNet34
  #   uses: create-model@v1
  #   with:
  #     name: resnet34-epochs-10
  #     type: Custom
  #   inputs:
  #     model:
  #       type: dataset
  #       with:
  #         ref: ds4xkzxoranlih1
  #   outputs:
  #     model-id:
  #       type: string
  #   resources:
  #     instance-type: C4
  # TestResNet34:
  #   uses: script@v1
  #   with:
  #     image: nvcr.io/nvidia/pytorch:21.10-py3
  #     script: |-
  #       cd /inputs/repo/
  #       python test_model.py -m /inputs/model/resnet34-epochs-"$batches".pth --id=$(cat /inputs/model-id)
  #       cp -R /inputs/repo /outputs
  #       cp -R test-results/resnet34-epochs-"$batches".json /outputs/test-results
  #   needs:
  #     - TrainResNet34
  #     - UploadResNet34
  #   inputs:
  #     repo: TrainResNet34.outputs.repo
  #     model: TrainResNet34.outputs.model
  #     model-id: UploadResNet34.outputs.model-id
  #     cifar10-data: 
  #       type: dataset
  #       with:
  #         ref: ds4xkzxoranlih1
  #   outputs:
  #     test-results:
  #       type: volume
  #     repo:
  #       type: volume
  #   resources:
  #     instance-type: C4
  # CompareModels:
  #   uses: script@v1
  #   with:
  #     image: nvcr.io/nvidia/pytorch:21.10-py3
  #     script: |-
  #       cd /inputs/repo/
  #       mkdir /inputs/test-results
  #       cp -r /inputs/test-results-a/. /inputs/test-results
  #       cp -r /inputs/test-results-b/. /inputs/test-results
  #       python print_test_results.py
  #       cp -R /inputs/repo /outputs
  #   needs:
  #     - TestResNet18
  #     - TestResNet34
  #   inputs:
  #     repo: TestResNet18.outputs.repo
  #     test-results-a: TestResNet18.outputs.test-results
  #     test-results-b: TestResNet34.outputs.test-results
  #   outputs:
  #     model-id:
  #         type: string
  #     repo:
  #         type: volume
  #   resources:
  #     instance-type: C4
  # DeployModel:
  #   uses: script@v1
  #   with:
  #     image: nvcr.io/nvidia/pytorch:21.10-py3
  #     script: |-
  #       cd /inputs/repo/
  #       python write_deployment_file.py --id=$(cat /inputs/model-id)
  #       pip install gradient -U --force -q
  #       gradient deployments update --id 48754ab1-43b0-4c42-a2a8-8055849bbf73 --projectId prwo4urjq --spec ./deployment.yaml --apiKey "$API_KEY"
  #   needs:
  #     - CompareModels
  #   inputs:
  #     model-id: CompareModels.outputs.model-id
  #     repo: CompareModels.outputs.repo
  #   resources:
  #     instance-type: C4
context:
  event:
    github:
      url: https://github.com/AAPProjects/paperspace
